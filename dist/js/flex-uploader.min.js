class FlexUploader { constructor(e, t, a) { this.container = document.getElementById(e), this.inputFile = document.getElementById(t), this.imageView = document.getElementById(a), this.inputFile.addEventListener("change", (() => this.uploadImage())), this.container.addEventListener("dragover", (e => this.handleDragOver(e))), this.container.addEventListener("dragleave", (() => this.handleDragLeave())), this.container.addEventListener("drop", (e => this.handleDrop(e))) } uploadImage() { const e = URL.createObjectURL(this.inputFile.files[0]), t = new Image; t.src = e, t.onload = () => { this.imageView.style.width = `${t.width}px`, this.imageView.style.height = `${t.height}px`, Object.assign(this.imageView.style, { backgroundImage: `url('${e}')`, textContent: "", backgroundSize: "cover", backgroundPosition: "center", backgroundRepeat: "no-repeat" }) } } handleDragOver(e) { e.preventDefault(), this.container.classList.add("drag-over") } handleDragLeave() { this.container.classList.remove("drag-over") } handleDrop(e) { e.preventDefault(), this.container.classList.remove("drag-over"), e.dataTransfer.files.length > 0 && (this.inputFile.files = e.dataTransfer.files, this.uploadImage()) } }